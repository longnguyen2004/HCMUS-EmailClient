// <auto-generated />
using EmailClient.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmailClient.Database.Migrations
{
    [DbContext(typeof(EmailContext))]
    [Migration("20231122162943_AddFilters")]
    partial class AddFilters
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("EmailClient.Database.EmailEntry", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<byte[]>("Email")
                        .IsRequired()
                        .HasColumnType("BLOB")
                        .HasColumnName("email");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("is_read");

                    b.HasKey("Id");

                    b.HasIndex("IsRead");

                    b.ToTable("emails", (string)null);
                });

            modelBuilder.Entity("EmailClient.Database.Filter", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("filters", (string)null);
                });

            modelBuilder.Entity("EmailEntryFilter", b =>
                {
                    b.Property<string>("EmailsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FiltersName")
                        .HasColumnType("TEXT");

                    b.HasKey("EmailsId", "FiltersName");

                    b.HasIndex("FiltersName");

                    b.ToTable("EmailEntryFilter");
                });

            modelBuilder.Entity("EmailEntryFilter", b =>
                {
                    b.HasOne("EmailClient.Database.EmailEntry", null)
                        .WithMany()
                        .HasForeignKey("EmailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmailClient.Database.Filter", null)
                        .WithMany()
                        .HasForeignKey("FiltersName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
